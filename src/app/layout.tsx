import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { HeaderProvider } from "@/components/Header/header";
import MiniPlayer from "@/components/jam/MiniPlayer";
import LoginModal from "@/components/auth/LoginModal";
import AppViewManager from "@/components/AppViewManager";
import Script from "next/script";
import { Providers } from "@/providers";
import Loader from "@/components/loader/Loader";


// Add type declaration for the global AgoraRTM object
declare global {
  interface Window {
    AgoraRTM?: any;
  }
}

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Mushflow",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <head>
        {/* Load Agora RTM SDK from CDN as a fallback */}
        <Script 
          src="https://download.agora.io/sdk/release/agora-rtm-2.2.1.js" 
          strategy="beforeInteractive"
        />
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <Providers>
          <HeaderProvider>
            <AppViewManager>
              {children}
            </AppViewManager>
            <MiniPlayer />
            <LoginModal />
            <Loader />
          </HeaderProvider>
        </Providers>
      </body>
    </html>
  );
}
